###########################
##      LOCAL MACOS      ##
###########################
---
- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Ensure Homebrew is installed
      command: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      args:
        creates: /usr/local/bin/brew

    - name: Ensure 'brew services' is tapped
      homebrew_tap:
        name: homebrew/services

    - name: Create directory ~/bin
      file:
        path: "/Users/roman/bin"
        state: directory
        mode: '0755'
    - name: Add ~/bin dir to PATH
      lineinfile:
        path: /Users/roman/.bash_profile
        regexp: '^(export PATH=.*:/Users/roman/bin.*$|^export PATH=.*)$'
        line: 'export PATH=$PATH:/Users/roman/bin'
        insertafter: '^export PATH='
      when: "'/Users/roman/bin' not in lookup('file', '/Users/roman/.bash_profile')"

    - name: Install mc
      homebrew:
        name: mc
        state: present

    - name: Install ranger
      homebrew:
        name: ranger
        state: present

    - name: Ranger - enable image preview
      ansible.builtin.lineinfile:
        path: ~/.config/ranger/rc.conf
        regexp: "{{ item.regexp }}"
        line:   "{{ item.line }}"
      loop:
        - { regexp: '^set\ preview_images', line: 'set preview_images true' }
        - { regexp: '^set\ preview_images_method', line: 'set preview_images_method iterm2' }

    - name: Create symbolic link for ranger
      file:
        src: "/usr/local/bin/ranger"
        path: "/Users/roman/bin/rg"
        state: link

    - name: Install zsh
      homebrew:
        name: zsh
        state: present

    - name: Install iterm2
      homebrew:
        name: iterm2
        state: present

    - name: Powerlevel10k - get source code
      ansible.builtin.git:
        repo: https://github.com/romkatv/powerlevel10k.git
        dest: ~/.powerlevel10k
        update: yes

    - name: Powerlevel10k - update .zshrc
      ansible.builtin.lineinfile:
        path: ~/.zshrc
        regexp: '^source ~\/.powerlevel10k'
        line: source ~/.powerlevel10k/powerlevel10k.zsh-theme
        
    - name: Powerlevel10k - copy config
      ansible.builtin.copy:
        src: zsh/.p10k.zsh
        dest: ~/.p10k.zsh
        mode: '0644'
        
    - name: Powerlevel10k - Update .zshrc
      ansible.builtin.blockinfile:
        path: ~/.zshrc
        block: |
          if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
            source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
          fi
        insertbefore: BOF
        marker_begin: "BEGIN Enable Powerlevel10k instant prompt"
        marker_end: "END Powerlevel10k instant prompt"
        backup: yes
        create: yes

    - name: Powerlevel10k - Update .zshrc
      ansible.builtin.blockinfile:
        path: ~/.zshrc_test
        block: |
          [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
        insertafter: EOF
        marker_begin: "BEGIN Powerlevel10k config"
        marker_end: "END Powerlevel10k config"
        backup: yes

    - name: Install htop
      homebrew:
        name: htop
        state: present

    - name: Install wget
      homebrew:
        name: wget
        state: present

    - name: Install curl
      homebrew:
        name: curl
        state: present

    - name: Install coreutils
      homebrew:
        name: coreutils
        state: present

    - name: Install python3
      homebrew:
        name: python3
        state: present

    - name: Install git
      homebrew:
        name: git
        state: present

    - name: Install pre-commit
      homebrew:
        name: pre-commit
        state: present

    - name: Install openssl
      homebrew:
        name: openssl
        state: present

    - name: Install imagemagick
      homebrew:
        name: imagemagick
        state: present

    - name: Install go
      homebrew:
        name: go
        state: present
    - name: Add env var GOPRIVATE
      lineinfile: dest=~/.bash_profile regexp=^GOPRIVATE= line="export GOPRIVATE="
    - name: Add env var GOPROXY
      lineinfile: dest=~/.bash_profile regexp=^GOPROXY= line="export GOPROXY=direct"
    - name: Add env var GOSUMDB
      lineinfile: dest=~/.bash_profile regexp=^GOSUMDB= line="export GOSUMDB=off"
    - name: Create directory ~/go
      file:
        path: "/Users/roman/go"
        state: directory
        mode: '0755'
    - name: Create directory ~/go/bin
      file:
        path: "/Users/roman/go/bin"
        state: directory
        mode: '0755'
    - name: Add env var GOPATH
      lineinfile: dest=~/.bash_profile regexp=^GOPATH= line="export GOPATH=$HOME/go"
    - name: Add go bin dir to PATH
      lineinfile:
        path: /Users/roman/.bash_profile
        regexp: '^(export PATH=.*:/Users/roman/go/bin.*$|^export PATH=.*)$'
        line: 'export PATH=$PATH:/Users/roman/go/bin'
        insertafter: '^export PATH='
      when: "'/Users/roman/go/bin' not in lookup('file', '/Users/roman/.bash_profile')"

    - name: Install Google Chrome via cask
      homebrew_cask:
        name: google-chrome
        state: present

    - name: Install Yandex Browser via cask
      homebrew_cask:
        name: yandex
        state: present

    - name: Install Yandex Disk via cask
      homebrew_cask:
        name: yandex-disk
        state: present

    - name: Install Visual Studio Code via cask
      homebrew_cask:
        name: visual-studio-code
        state: present

    - name: Install JetBrains Toolbox via cask
      homebrew_cask:
        name: jetbrains-toolbox
        state: present

    - name: Install Sublime Text via cask
      homebrew_cask:
        name: sublime-text
        state: present

    - name: Install Lens via cask
      homebrew_cask:
        name: lens
        state: present

    # - name: Install Docker via cask
    #   homebrew_cask:
    #     name: docker
    #     state: present

    - name: Install Zoom via cask
      homebrew_cask:
        name: zoom
        state: present

    - name: Install Postman via cask
      homebrew_cask:
        name: postman
        state: present
